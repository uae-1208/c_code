
P552:
#include<stdio.h>
#include<string.h>
struct NAME{
	char first[2];
	char last[2];
}name[100];

int mycomp(const void* p1, const void* p2)
{
	const struct NAME *pn1=(const struct NAME *)p1;
	const struct NAME *pn2=(const struct NAME *)p2;
	if(strcmp(pn1->first,pn2->last)!=0)
		return strcmp(pn1->first,pn2->first);
	else
		strcmp(pn1->last,pn2->last);
}

void showname(void)
{
	int i=0;
	for(i=0;i<100;i++)
	{
		printf("%2s %2s  ",name[i].first,name[i].last);
		if((i+1)%5==0)
			puts(" ");
	}
}

int main()
{
	FILE* fp;
	fp = fopen("ak47.txt", "r");
	fread(name, sizeof(struct NAME), 100, fp);
	qsort(name,100,sizeof(struct NAME),mycomp);
	showname();
	return 0;
}

P558:
#include<stdio.h>
#include<stdlib.h>
#include<time.h>
int main()
{
	int i;
	int num[100];
	int target[100];
	srand((unsigned)time(NULL));
	for (i = 0; i < 100; i++)
		num[i] = rand() % 100;
	puts("Numbers from num arrey:");
	for (i = 0; i < 100; i++)
	{
		printf("%-4d", num[i]);
		if ((i + 1) % 25 == 0)
			putchar('\n');		
	}
	putchar('\n');
	memmove(target, num, 100 * sizeof(int));
	puts("Numbers from target arrey:");
	for (i = 0; i < 100; i++)
	{
		printf("%-4d", target[i]);
		if ((i + 1) % 25 == 0)
			putchar('\n');
	}
	return 0;
}


P562:
T2:
#include<stdio.h>
#define fun1(x)  (1/(float)(x))
#define fun2(x,y) fun1(fun1(x)+fun1(y))
int main()
{
	int x = 17;
	float y = 0.528;
	printf("%.3f\n", fun2(x, y));
	return 0;
}

T5:
#include<stdio.h>
#include<time.h>
int sn[56];
void getnum(int* pn, int size)
{
	int i;
	for (i = 0; i < size; i++)
		pn[i] = rand() % 1000;
}

int judge_sn(int* pn, int size, int num)
{
	int i;
	for (i = 0; i < size; i++)
		if (pn[i] == num)
			return 0;
	return 1;
}

void choosenum(int* pn, int size)
{
	int temp;
	int i;
	for (i = 0; i < size; i++)
	{
		temp = rand() % 100;
		if (judge_sn(sn, i - 1, temp))
			sn[i] = temp;
	}
	for (i = 0; i < size; i++)
		printf("num%d = %d\n", i, pn[sn[i]]);
}

int main()
{
	int num[100];
	srand((unsigned)time(NULL));
	getnum(num, 100);
	choosenum(num,56);
	return 0;
}
